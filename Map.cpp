#include "Map.h"
#include "TextureManager.h"

int lvl1[23][40] = {
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	{1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
	{1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,1},
	{1,0,0,4,4,4,4,4,4,0,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,4,0,0,4,4,0,0,1},
	{1,0,0,4,0,0,0,0,0,0,0,0,0,0,4,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,4,0,0,0,4,0,1},
	{1,0,0,4,4,4,4,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,4,0,0,0,0,0,4,4,4,4,4,0,0,0,0,0,1},
	{1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1},
	{1,0,0,0,0,0,4,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,4,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,1},
	{1,0,0,4,0,0,4,4,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,4,4,4,4,0,0,0,4,4,0,1},
	{1,0,0,4,0,0,0,0,4,0,0,0,4,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,1},
	{1,4,4,4,0,0,0,0,4,0,0,0,4,0,4,0,0,0,0,4,0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,4,0,0,1},
	{1,0,0,4,0,0,4,4,4,0,0,0,4,4,4,0,0,0,4,4,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,4,4,0,0,1},
	{1,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,4,4,0,0,0,1},
	{1,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,4,4,0,0,0,0,1},
	{1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,4,4,0,0,0,0,0,1},
	{1,0,4,4,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,4,4,0,0,0,4,4,4,1},
	{1,0,0,4,4,4,4,4,0,0,4,0,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,4,0,0,4,4,0,0,1},
	{1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,1},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,1},
	{1,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,4,4,4,4,0,0,1},
	{1,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
};


Map::Map()
{
	dirt = TextureManager::LoadTexture("assets/dirtresized.png");
	grass = TextureManager::LoadTexture("assets/grassresized.png");
	wall = TextureManager::LoadTexture("assets/wallresized.png");

	LoadMap(lvl1);

	src.x = src.y = 0;
	src.w = dest.w = 40;
	src.h = dest.h = 40;
	dest.x = dest.y = 0;
}

void Map::LoadMap(int arr[23][40])
{
	for(int row = 0; row < 23; row++)
	{
		for (int col = 0; col < 40; col++)
		{
			map[row][col] = arr[row][col];
		}
	}
}

void Map::DrawMap()
{
	int type = 0;

	for (int row = 0; row < 23; row++)
	{
		for (int col = 0; col < 40; col++)
		{
			type = map[row][col];

			dest.x = col * 40;
			dest.y = row * 40;


			switch (type)
			{
			case 0:
				TextureManager::Draw(grass, src, dest);
				break;
			case 1:
				TextureManager::Draw(wall, src, dest);
				break;
			case 4:
				TextureManager::Draw(dirt, src, dest);
			}

		}
	}
}